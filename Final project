from tkinter import *
from tkinter import PhotoImage

ROOT = Tk()
ROOT.minsize(height=500, width=900)

ROOT.configure(bg='light blue')


def tab1():
    """
    Initializes the initial interface for the mini Wendy's application.
    - Displays a welcome label with a message.
    - Displays an image of Wendy's logo.
    - Provides a button to take a tour, which transitions to the order form tab (tab2).
    - tab2(): Initializes the order form interface.
    """
    def tab2():
        """
        Initializes the order form interface for the user to add items to their cart.
        This function performs the following tasks:
        - Destroys the initial label and button widgets.
        - Displays the order form label.
        - Displays the menu with available items and their prices.
        - Displays the user's cart and the total price.
        - Provides buttons for adding items to the cart.
        - Updates the cart and total price when items are added.
        - Provides a button to proceed to the checkout tab (tab3).
        - Provides a button to go back to the initial tab (tab1).
        Inner Functions:
        - add_to_cart(item, price): Adds the specified item to the cart and updates the total price.
        - tab3(): Initializes the checkout interface.
        - back_to_tab1(): Returns to the initial tab (tab1).
        """
        cart = []
        total_price = 0.0

        label1.destroy()
        button1.destroy()
        label2 = Label(ROOT, text="order form", font=('arial', 25))# this is the order form
        label2.pack()

        menu_label = Label(
            ROOT,
            text="Wendy's Menu:\n1. HamBurger - $5.99\n2. Fries - $2.49\n3. Baconator - $6.99\n4. Drink - $1.99\n5. CheeseBurger - $4.99",
            font=('arial', 20)
        )# this is the menu label
        menu_label.pack()# this is the pack for the menu label

        cart_label = Label(ROOT, text="Your Cart:", font=('arial', 20))# this is the cart label
        cart_label.pack()

        cart_items = Label(ROOT, text="", font=('arial', 15))# this is the cart items
        cart_items.pack()

        total_price_label = Label(ROOT, text="Total Price: $0.00", font=('arial', 20))# this is  the total price label
        total_price_label.pack()

        def add_to_cart(item, price):
            nonlocal total_price
            cart.append(item) 
            total_price += price
            cart_items.config(text="\n".join(cart))# this is the cart items
            total_price_label.config(text=f"Total Price: ${total_price:.2f}")# this is th total price label

        Button(
            ROOT,
            text='Add Hamburger',
            font=('arial', 15),
            command=lambda: add_to_cart("Hamburger - $5.99", 5.99)
        ).pack() # this is the button for the hamburger 
        Button(ROOT, text='Add Fries', font=('arial', 15), command=lambda: add_to_cart("Fries - $2.49", 2.49)).pack() # this is the button for the fries 
        Button(ROOT, text='Add Baconator', font=('arial', 15),
               command=lambda: add_to_cart("Baconator - $6.99", 6.99)).pack() # this is the button for the baconator 
        Button(ROOT, text='Add Drink', font=('arial', 15), command=lambda: add_to_cart("Drink - $1.99", 1.99)).pack() # this is the button for the drink
        Button(ROOT, text='Add CheeseBurger', font=('arial', 15),
               command=lambda: add_to_cart("CheeseBurger - $4.99", 4.99)).pack() # this is the button for the cheeseburger

        def tab3():
            """
            This function sets up the third tab of the application, which is the checkout tab. It performs the following tasks:
            1. Destroys all existing widgets in the ROOT window.
            2. Creates and packs a label indicating the checkout process.
            3. Creates and packs a label summarizing the cart items.
            4. Creates and packs a label displaying the total price of the items in the cart.
            5. Defines and creates a button to place the order, which transitions to the next tab (tab4).
            6. Defines the tab4 function, which:
                - Destroys the checkout widgets.
                - Creates and packs a confirmation label.
                - Defines and creates buttons to confirm or cancel the order.
                - Defines functions to handle order confirmation and cancellation.
                - Defines a function to go back to tab3 from tab4.
            7. Creates and packs a button to proceed to the next tab (tab4).
            8. Defines and creates a button to go back to the previous tab (tab2).
            """
            for widget in ROOT.winfo_children(): # this is the for loop for the widgets
                widget.destroy()# this is the destroy for the widgets 

            label3 = Label(ROOT, text="checking out ", font=('arial', 25)) # this is  the label for the checking out
            label3.pack() # thi is the pack for the label3

           

            cart_summary_label = Label(ROOT, text="Your Cart Items:", font=('arial', 20)) # this is the cart summary label
            cart_summary_label.pack() # this is the pack for the cart summary label 

            cart_summary_items = Label(ROOT, text="\n".join(cart), font=('arial', 15)) # this is the cart summary items
            cart_summary_items.pack() # this is the pack for the cart summary items 

            total_price_checkout_label = Label(ROOT, text=f"Total Price: ${total_price:.2f}", font=('arial', 20)) # this is  the total price checkout label
            total_price_checkout_label.pack() # this is the pack for the total price checkout label
           
            def place_order(): # this function is used to place the order
                tab4()

            place_order_button = Button(ROOT, text='Place Order', font=('arial', 20), command=place_order,
                                        activebackground='green') # this is the place order button 
            place_order_button.pack() # this is the pack for the place order button

            def tab4():
                """
                This function represents the fourth tab in the application, which handles the order confirmation process.
                It performs the following actions:
                - Destroys existing widgets related to the cart summary and checkout.
                - Displays a confirmation message asking the user if they want to complete their order.
                - Provides two buttons: 'Confirm' to complete the order and 'Cancel' to go back to the previous tab.
                - If the order is confirmed, it displays an order completion message.
                - If the order is canceled, it returns to the previous tab.
                - Includes a back button to return to the previous tab.
                Functions:
                - confirm_order(): Confirms the order and displays an order completion message.
                - cancel_order(): Cancels the order and returns to the previous tab.
                - back_to_tab3_from_tab4(): Returns to the previous tab from the current tab.
                - back_to_tab3(): Returns to the previous tab.
                """
                label3.destroy()
                cart_summary_label.destroy() # this is the destroy for the cart summary label
                cart_summary_items.destroy() # this is the destroy for the cart summary items 
                total_price_checkout_label.destroy() # this is the destroy for the total price checkout label 
                button3.destroy() # this is the destroy for the button3
                buttonBack.destroy() # this is the destroy for the buttonBack

                confirmation = Label(ROOT, text="Are you sure you want to complete your order?", font=('arial', 20)) # this is the label for the confirmation 
                confirmation.pack() # this is the pack for the confirmation 

                def confirm_order(): # this function is used to confirm the order
                    confirmation.destroy() # this is the destroy for the confirmation
                    confirm_button.destroy()# this is the destroy for the confirm button
                    cancel_button.destroy() # this is the destroy for the cancel button

                    label4 = Label(ROOT, text="âœ” Order Complete with Confirmation", font=('arial', 25), fg='green') # this is the label for the order complete with confirmation
                    label4.pack() # this is the pack for the label4

                def cancel_order():
                    confirmation.destroy() 
                    confirm_button.destroy()
                    cancel_button.destroy()
                    back_to_tab3()

                confirm_button = Button(ROOT, text='Confirm', font=('arial', 15), command=confirm_order,
                                        activebackground='green') # this is the confirm button for the tab4
                confirm_button.pack() # this is the pack for the confirm button

                cancel_button = Button(ROOT, text='Cancel', font=('arial', 15), command=cancel_order, 
                                       activebackground='red') # this is the cancel button for the tab4
                cancel_button.pack() # this is the pack for the cancel button

                def back_to_tab3_from_tab4(): # this function is used to go back to tab3 from tab4
                    for widget in ROOT.winfo_children(): # this is the for loop for the widgets
                        widget.destroy() # this is the destroy for the widgets
                    tab3()

                back_button = Button(ROOT, text='BACK', font=('arial', 15), command=back_to_tab3_from_tab4,
                                     activebackground='blue') # this is the back button for the tab4
                back_button.pack() # this is the pack for the back button

                def back_to_tab3(): # this function is used to go back to tab3
                    for widget in ROOT.winfo_children():   # this is the for loop for the widgets
                        widget.destroy()  # this is the destroy for the widgets 
                    tab3()

            button3 = Button(ROOT, text='NEXT', font=('arial', 25), command=tab4, activebackground='black') # this button is used to go to tab4
            button3.pack(side=BOTTOM)

            def back():
                for widget in ROOT.winfo_children():  # this is the for loop for the widgets
                    widget.destroy()  # this is the destroy for the widgets 
                tab2()

            buttonBack = Button(ROOT, text='BACK', font=('arial', 25), command=tab2, activebackground='blue') # this function is used to go back to tab2
            buttonBack.pack(side=BOTTOM) # this is the pack for the buttonBack

        def back_to_tab1(): # this function is used to go back to tab1
            for widget in ROOT.winfo_children(): # this is the for loop for the widgets
                widget.destroy() # this is the destroy for the widgets 
            tab1()

        button2 = Button(ROOT, text='NEXT', font=('arial', 25), command=tab3, activebackground='green') # this function is used to go  to tab3
        button2.pack(side=BOTTOM)

        buttonBack = Button(ROOT, text='BACK', font=('arial', 25), command=back_to_tab1, activebackground='blue') # this function is used to go back to tab1
        buttonBack.pack(side=BOTTOM)

    label1 = Label(ROOT, text="Welcome to mini wendy's", font=('arial', 25)) # this is the label for the welcome message 
    label1.pack()

    img = PhotoImage(file='C:\\Users\\yvers\\Pictures\\wendys.png') # this is the image for the welcome message 
    label1 = Label(ROOT, image=img) # this is the label for the image

    label1.image = img 
    label1.pack() # this is the pack for the image 

    button1 = Button(
        ROOT,
        text='Take a Tour',
        font=('arial', 25),
        command=tab2,
        activebackground='red'
    ) # this is the button for the take a tour button 
    button1.pack(side=BOTTOM) # this is the pack for the take a tour button 


tab1() # this is the tabq function

ROOT.mainloop() # this is the mainloop for the root
